<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SunnyHerry&#39;Blog</title>
  
  <subtitle>寻找你的旅程</subtitle>
  <link href="http://sunnyherry.github.io/atom.xml" rel="self"/>
  
  <link href="http://sunnyherry.github.io/"/>
  <updated>2023-05-15T14:32:38.263Z</updated>
  <id>http://sunnyherry.github.io/</id>
  
  <author>
    <name>SunnyHerry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SunnyHerryBlog的装修日记</title>
    <link href="http://sunnyherry.github.io/undefined/5523.html"/>
    <id>http://sunnyherry.github.io/undefined/5523.html</id>
    <published>2023-05-15T21:11:20.000Z</published>
    <updated>2023-05-15T14:32:38.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="嘉楠改的真的要疯啦"><a href="#嘉楠改的真的要疯啦" class="headerlink" title="嘉楠改的真的要疯啦"></a>嘉楠改的真的要疯啦</h2><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>SunnyHerryBlog的装修日记</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>‌2023.5.15</p></div></div><div class='timeline-item-content'><p>写完关于我页面，还有装修日记<br>文章一二三级标题小风车</p><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>音乐馆(╯▔皿▔)╯</p>            </div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>‌2023.5.13</p></div></div><div class='timeline-item-content'><p>增加文章<br>添加文章顶部流动特效<br>添加首页人潮汹涌(有随便逛逛功能)<br>右侧名片特效修改<br>引入自定义图标<br>加一些有的没的，已经忘了哈哈</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>‌2023.5.12</p></div></div><div class='timeline-item-content'><p>Github action 自动部署<br>butterfly打赏按钮修改<br>修改首页文章样式<br>修改右侧边栏样式</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>‌2023.5.10</p></div></div><div class='timeline-item-content'><p>添加主题星空背景，采用一图流方案、增加流星粒子光效，终于有点模样了<br>添加页脚徽标和开站计时器<br>留言板、wowjs动态、外挂标签<br>大改butterfly主题配置文件</p><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>pwa安装</p>            </div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>‌2023.5.8</p></div></div><div class='timeline-item-content'><p>完善Hexo,确定博客主题样式——Butterfly<br>添加左下角看板娘、左下角音乐播放器<br>添加右边菜单栏电子钟，和风天气+高德地图</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>‌2023.5.7</p></div></div><div class='timeline-item-content'><p>创建GitHub仓库，取名SunnyHerry<br>搭了一晚上Hexo,最后要走的时候才意外搭完，后来才知道网络不行((╯▔皿▔)╯)</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>‌2023.3.*</p></div></div><div class='timeline-item-content'><p>第一次看见了别人的博客，真的很羡慕啊，奈何知识储备不够，只能先放一边</p></div></div></div>]]></content>
    
    
    <summary type="html">嘉楠寻找你的路途早已开始</summary>
    
    
    
    <category term="前端" scheme="http://sunnyherry.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://sunnyherry.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>瑞吉外卖优化</title>
    <link href="http://sunnyherry.github.io/undefined/16107.html"/>
    <id>http://sunnyherry.github.io/undefined/16107.html</id>
    <published>2023-05-15T14:32:38.263Z</published>
    <updated>2023-05-15T14:32:38.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="瑞吉外卖重点优化代码"><a href="#瑞吉外卖重点优化代码" class="headerlink" title="瑞吉外卖重点优化代码"></a>瑞吉外卖重点优化代码</h1><h2 id="员工登录"><a href="#员工登录" class="headerlink" title="员工登录"></a>员工登录</h2><blockquote><p>重温session<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">    /**</span><br><span class="line">     * 员工登录</span><br><span class="line">     *</span><br><span class="line">     * @param request</span><br><span class="line">     * @param employee</span><br><span class="line">     * @<span class="built_in">return</span></span><br><span class="line">     */</span><br><span class="line">    @PostMapping(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">    public R&lt;Employee&gt; login(HttpServletRequest request, @RequestBody Employee employee) &#123;</span><br><span class="line"></span><br><span class="line">//        1、将页面提交的密码password进行md5加密处理</span><br><span class="line">        String password = employee.getPassword();</span><br><span class="line">        password = DigestUtils.md5DigestAsHex(password.getBytes());</span><br><span class="line"></span><br><span class="line">        //2、根据页面提交的用户名username查询数据库</span><br><span class="line">        LambdaQueryWrapper&lt;Employee&gt; queryWrapper = new LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(Employee::getUsername, employee.getUsername());</span><br><span class="line">        Employee emp = employeeService.getOne(queryWrapper);</span><br><span class="line"></span><br><span class="line">        //3、如果没有查询到则返回登陆失败结果</span><br><span class="line">        <span class="keyword">if</span> (emp == null) &#123;</span><br><span class="line">            <span class="built_in">return</span> R.error(<span class="string">&quot;用户名不存在，登陆失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //4、密码比对，如果不一致则返回登录失败结果</span><br><span class="line">        <span class="keyword">if</span> (!emp.getPassword().equals(password)) &#123;</span><br><span class="line">            <span class="built_in">return</span> R.error(<span class="string">&quot;密码错误，登陆失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //5、查看员工状态，如果为已禁用状态，则返回员工已禁用结果</span><br><span class="line">        <span class="keyword">if</span> (emp.getStatus() == 0) &#123;</span><br><span class="line">            <span class="built_in">return</span> R.error(<span class="string">&quot;账号已禁用,无法登录&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //6、登陆成功，将员工的<span class="built_in">id</span>存入Session并返回登录成功结果</span><br><span class="line">        request.getSession().setAttribute(<span class="string">&quot;employee&quot;</span>, emp.getId());//数据是通过键值对存储的</span><br><span class="line">        <span class="built_in">return</span> R.success(emp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="停售启售套餐操作"><a href="#停售启售套餐操作" class="headerlink" title="停售启售套餐操作"></a>停售启售套餐操作</h2><blockquote><p>Controller部分<br>难点在于要考虑菜品是否是停用状态，要查询两次数据库，然后stream流<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 更新套餐停售启售状态</span><br><span class="line"> * @param status</span><br><span class="line"> * @param ids</span><br><span class="line"> * @<span class="built_in">return</span></span><br><span class="line"> */</span><br><span class="line">@PostMapping(<span class="string">&quot;/status/&#123;status&#125;&quot;</span>)</span><br><span class="line">public R&lt;String&gt; status(@PathVariable Integer status,@RequestParam List&lt;Long&gt; ids)&#123;</span><br><span class="line">    //首先根据ids把setmeal对象获取出来，然后根据status更新数据</span><br><span class="line">    ids.stream().map((item) -&gt;&#123;</span><br><span class="line">        LambdaQueryWrapper&lt;Setmeal&gt; queryWrapper =new LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(Setmeal::getId,item);</span><br><span class="line">        Setmeal one = setmealService.getOne(queryWrapper);</span><br><span class="line">        //但是如果套餐里面有一个菜品是停售的状态，那么则修改状态失败，抛出业务异常</span><br><span class="line">        LambdaQueryWrapper&lt;SetmealDish&gt; queryWrapper1 =new LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">        queryWrapper1.eq(SetmealDish::getSetmealId,one.getId());</span><br><span class="line">        List&lt;SetmealDish&gt; setmealDishes = setmealDishService.list(queryWrapper1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (SetmealDish setmealDish : setmealDishes) &#123;</span><br><span class="line">            LambdaQueryWrapper&lt;Dish&gt; queryWrapper2 =new LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">            queryWrapper2.eq(Dish::getId, setmealDish.getDishId());</span><br><span class="line">            Dish dish = dishService.getOne(queryWrapper2);</span><br><span class="line">            <span class="keyword">if</span> (dish.getStatus() == 1) &#123;</span><br><span class="line">                //表示有菜品在售，无法调整套餐状态，不能变成停售</span><br><span class="line">                throw new CustomException(<span class="string">&quot;该套餐中有菜品在售，无法停售&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        one.setStatus(status);</span><br><span class="line">        setmealService.update(one, queryWrapper);</span><br><span class="line">        <span class="built_in">return</span> one;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="built_in">return</span> R.success(<span class="string">&quot;套餐状态更新成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="添加购物车操作"><a href="#添加购物车操作" class="headerlink" title="添加购物车操作"></a>添加购物车操作</h2><blockquote><p>Controller部分<br>难点在于查询菜品和套餐，这里算法居然在前端？黑马前端真的顶<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 添加购物车</span><br><span class="line"> *</span><br><span class="line"> * @param shoppingCart</span><br><span class="line"> * @<span class="built_in">return</span></span><br><span class="line"> */</span><br><span class="line">@PostMapping(<span class="string">&quot;/add&quot;</span>)</span><br><span class="line">public R&lt;ShoppingCart&gt; add(@RequestBody ShoppingCart shoppingCart) &#123;</span><br><span class="line"></span><br><span class="line">    //设置用户<span class="built_in">id</span>，指定当前是哪个用户的购物车数据</span><br><span class="line">    Long currentId = BaseContext.getCurrentId();</span><br><span class="line">    shoppingCart.setUserId(currentId);</span><br><span class="line"></span><br><span class="line">    LambdaQueryWrapper&lt;ShoppingCart&gt; queryWrapper = new LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(ShoppingCart::getUserId, currentId);</span><br><span class="line">    //查询当前菜品或菜品是否在购物车中</span><br><span class="line">    Long dishId = shoppingCart.getDishId();</span><br><span class="line">    <span class="keyword">if</span> (dishId != null) &#123;</span><br><span class="line">        //添加到购物车的是菜品</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getDishId, dishId);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        //添加到购物车的是套餐</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getSetmealId, shoppingCart.getSetmealId());</span><br><span class="line">    &#125;</span><br><span class="line">    ShoppingCart cartServiceOne = shoppingCartService.getOne(queryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cartServiceOne != null) &#123;</span><br><span class="line">        //如果已经存在，就在原来的数量基础上加一</span><br><span class="line">        Integer number = cartServiceOne.getNumber();</span><br><span class="line">        cartServiceOne.setNumber(number + 1);</span><br><span class="line">        shoppingCartService.updateById(cartServiceOne);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        //如果不存在，则添加购物车，数量默认就是一</span><br><span class="line">        shoppingCart.setNumber(1);</span><br><span class="line">        shoppingCart.setCreateTime(LocalDateTime.now());</span><br><span class="line">        shoppingCartService.save(shoppingCart);</span><br><span class="line">        cartServiceOne = shoppingCart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //如果不存在，则添加到购物车，数量默认就是一</span><br><span class="line">    <span class="built_in">return</span> R.success(cartServiceOne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="删减购物车操作"><a href="#删减购物车操作" class="headerlink" title="删减购物车操作"></a>删减购物车操作</h2><blockquote><p>难点在于只有一个商品再减直接删除数据库数据<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 购物车商品减一功能,只有一个商品再减直接删除数据库数据</span><br><span class="line"> * @param shoppingCart</span><br><span class="line"> * @<span class="built_in">return</span></span><br><span class="line"> */</span><br><span class="line">@PostMapping(<span class="string">&quot;/sub&quot;</span>)</span><br><span class="line">public R&lt;ShoppingCart&gt; sub(@RequestBody ShoppingCart shoppingCart) &#123;</span><br><span class="line">    //设置用户<span class="built_in">id</span>，指定当前是哪个用户的购物车数据</span><br><span class="line">    Long currentId = BaseContext.getCurrentId();</span><br><span class="line">    shoppingCart.setUserId(currentId);</span><br><span class="line"></span><br><span class="line">    LambdaQueryWrapper&lt;ShoppingCart&gt; queryWrapper = new LambdaQueryWrapper&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(ShoppingCart::getUserId, currentId);</span><br><span class="line">    //查询当前菜品或菜品是否在购物车中</span><br><span class="line">    Long dishId = shoppingCart.getDishId();</span><br><span class="line">    <span class="keyword">if</span> (dishId != null) &#123;</span><br><span class="line">        //减少操作到购物车的是菜品</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getDishId, dishId);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        //减少操作到购物车的是套餐</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getSetmealId, shoppingCart.getSetmealId());</span><br><span class="line">    &#125;</span><br><span class="line">    ShoppingCart cartServiceOne = shoppingCartService.getOne(queryWrapper);</span><br><span class="line"></span><br><span class="line">    //如果已经存在，就在原来的数量基础上减一</span><br><span class="line">    Integer number = cartServiceOne.getNumber();</span><br><span class="line">    <span class="keyword">if</span> (number &gt; 1) &#123;</span><br><span class="line">        cartServiceOne.setNumber(number - 1);</span><br><span class="line">        shoppingCartService.updateById(cartServiceOne);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        //number = 1 在减的话就不要这个订单了，直接删库数据</span><br><span class="line">        cartServiceOne.setNumber(0);</span><br><span class="line">        shoppingCartService.updateById(cartServiceOne);</span><br><span class="line">        shoppingCartService.removeById(cartServiceOne);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> R.success(cartServiceOne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="文件上传和下载-重点"><a href="#文件上传和下载-重点" class="headerlink" title="文件上传和下载(重点)"></a>文件上传和下载(重点)</h2><blockquote><p>重温了一下IO流，并且和web结合使用，收获满满<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">    /**</span><br><span class="line"> * 文件上传和下载</span><br><span class="line"> */</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(<span class="string">&quot;/common&quot;</span>)</span><br><span class="line">@Slf4j</span><br><span class="line">public class CommonController &#123;</span><br><span class="line">    @Value(<span class="string">&quot;<span class="variable">$&#123;reggie.path&#125;</span>&quot;</span>)</span><br><span class="line">    private String basePath;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 文件上传</span><br><span class="line">     *</span><br><span class="line">     * @param file</span><br><span class="line">     * @<span class="built_in">return</span></span><br><span class="line">     */</span><br><span class="line">    @PostMapping(<span class="string">&quot;/upload&quot;</span>)</span><br><span class="line">    public R&lt;String&gt; upload(MultipartFile file) &#123;//参数名必须和前端的name要保持一致</span><br><span class="line">        //file是一个临时文件，需要转存到指定位置，否则本次请求完成后临时文件会删除</span><br><span class="line">        log.info(file.toString());</span><br><span class="line"></span><br><span class="line">        //原始文件名</span><br><span class="line">        String originalFilename = file.getOriginalFilename();</span><br><span class="line">        String suffix = originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));//切割后为 .jpg</span><br><span class="line"></span><br><span class="line">        //使用UUID重新生成文件名，防止文件名重复造成文件覆盖</span><br><span class="line">        String fileName = UUID.randomUUID().toString() + suffix;//拼接成新的文件名称</span><br><span class="line"></span><br><span class="line">        //创建一个目录对象</span><br><span class="line">        File <span class="built_in">dir</span> = new File(basePath);</span><br><span class="line">        //判断当前目录是否存在</span><br><span class="line">        <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">            //目录不存在，创建新文件夹</span><br><span class="line">            dir.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            //将临时文件转存到指定位置</span><br><span class="line">            file.transferTo(new File(basePath + fileName));</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> R.success(fileName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 文件下载</span><br><span class="line">     *</span><br><span class="line">     * @param name</span><br><span class="line">     * @param response</span><br><span class="line">     */</span><br><span class="line">    @GetMapping(<span class="string">&quot;/download&quot;</span>)</span><br><span class="line">    public void download(String name, HttpServletResponse response) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            //输入流，通过输入流读取文件内容</span><br><span class="line">            FileInputStream fileInputStream = new FileInputStream(new File(basePath + name));</span><br><span class="line">            //输出流，通过输出流将文件写回浏览器，在浏览器里面显示图片,这里已经从形参中拿到了响应数据</span><br><span class="line">            ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line"></span><br><span class="line">            response.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line"></span><br><span class="line">            int len =0;</span><br><span class="line">            byte[] bytes =new byte[1024];</span><br><span class="line">            <span class="keyword">while</span> ((len =fileInputStream.read(bytes)) != -1)&#123;</span><br><span class="line">                outputStream.write(bytes,0,len);</span><br><span class="line">                outputStream.flush();</span><br><span class="line">            &#125;</span><br><span class="line">            //关闭流</span><br><span class="line">            outputStream.close();</span><br><span class="line">            fileInputStream.close();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p></blockquote><p>这里挑选了一些我认为重要的知识点，也是对瑞吉外卖完结的一个痕迹。真的学到了好多，Blog的知识点也是有一点在这里累计起来的。<br>下一个是SpringBoot2！</p>]]></content>
    
    
    <summary type="html">整个项目总耗时50+,感觉思维上升了一个高度( •̀ ω •́ )y</summary>
    
    
    
    <category term="后端" scheme="http://sunnyherry.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://sunnyherry.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>阳光不燥，微风正好</title>
    <link href="http://sunnyherry.github.io/undefined/9520.html"/>
    <id>http://sunnyherry.github.io/undefined/9520.html</id>
    <published>2023-05-10T15:38:20.000Z</published>
    <updated>2023-05-15T14:32:38.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="夏至"><a href="#夏至" class="headerlink" title="夏至"></a>夏至</h1><blockquote><p>一生的时间很短<br>  短到不过是两颗心之间的距离<br>  一生的时间也很长<br>  不如我们试着回到原点</p></blockquote>]]></content>
    
    
    <summary type="html">夏天的风</summary>
    
    
    
    <category term="生活" scheme="http://sunnyherry.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://sunnyherry.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
